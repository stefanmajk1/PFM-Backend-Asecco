// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PFMBackend.Database;

#nullable disable

namespace PFMBackend.Migrations
{
    [DbContext(typeof(TransactionsDbContext))]
    [Migration("20230723141359_OptionalFK")]
    partial class OptionalFK
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PFMBackend.Database.Entities.CategoryEntity", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ParentCode")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Code");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("PFMBackend.Database.Entities.SplitEntity", b =>
                {
                    b.Property<string>("TransactionId")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Catcode")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.HasKey("TransactionId", "Catcode");

                    b.HasIndex("Catcode");

                    b.ToTable("splits", (string)null);
                });

            modelBuilder.Entity("PFMBackend.Database.Entities.TransactionEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("BeneficiaryName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Catcode")
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character(3)")
                        .IsFixedLength();

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Mcc")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Catcode");

                    b.ToTable("transactions", (string)null);
                });

            modelBuilder.Entity("PFMBackend.Database.Entities.SplitEntity", b =>
                {
                    b.HasOne("PFMBackend.Database.Entities.CategoryEntity", "Category")
                        .WithMany("Splits")
                        .HasForeignKey("Catcode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PFMBackend.Database.Entities.TransactionEntity", "Transaction")
                        .WithMany("Splits")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("PFMBackend.Database.Entities.TransactionEntity", b =>
                {
                    b.HasOne("PFMBackend.Database.Entities.CategoryEntity", "Category")
                        .WithMany("Transaction")
                        .HasForeignKey("Catcode");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PFMBackend.Database.Entities.CategoryEntity", b =>
                {
                    b.Navigation("Splits");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("PFMBackend.Database.Entities.TransactionEntity", b =>
                {
                    b.Navigation("Splits");
                });
#pragma warning restore 612, 618
        }
    }
}
